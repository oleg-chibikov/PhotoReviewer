<windows:ResizableWindow
    x:Class="PhotoReviewer.View.PhotoWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:PhotoReviewer.ViewModel;assembly=PhotoReviewer.ViewModel"
    xmlns:zoomBorder="clr-namespace:Scar.Common.WPF.Controls;assembly=Scar.Common.WPF.Controls.ZoomBorder"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:viewContracts="clr-namespace:PhotoReviewer.Contracts.View;assembly=PhotoReviewer.Contracts"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:Scar.Common.WPF.Behaviors;assembly=Scar.Common.WPF.Behaviors"
    xmlns:data="clr-namespace:Scar.Common.ImageProcessing.Metadata;assembly=Scar.Common.ImageProcessing.Metadata"
    xmlns:windows="clr-namespace:PhotoReviewer.View.Windows;assembly=PhotoReviewer.View.Windows"
    xmlns:converters="clr-namespace:PhotoReviewer.View.Converters;assembly=PhotoReviewer.View.Converters"
    Title="{Binding Path=Photo.DisplayedInfo, Mode=OneWay, StringFormat=Photo Reviewer - {0}}"
    Icon="icon.ico"
    WindowStartupLocation="Manual"
    Background="#222"
    SizeToContent="Manual"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance viewModel:PhotoViewModel}">
    <windows:ResizableWindow.Resources>
        <ResourceDictionary>
            <Style
                TargetType="Button">
                <Setter
                    Property="Background"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    Value="0" />
            </Style>
            <Style
                TargetType="materialDesign:PackIcon">
                <Setter
                    Property="Width"
                    Value="70" />
                <Setter
                    Property="Height"
                    Value="70" />
                <Setter
                    Property="Foreground"
                    Value="LightGray" />
            </Style>
            <Style
                TargetType="Border"
                x:Key="ColorByDeleted">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=Photo.MarkedForDeletion, Mode=OneWay}"
                        Value="True">
                        <Setter
                            Property="Background"
                            Value="OrangeRed" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Path=Photo.Favorited, Mode=OneWay}"
                        Value="True">
                        <Setter
                            Property="Background"
                            Value="LimeGreen" />
                    </DataTrigger>
                </Style.Triggers>
                <Style.Setters>
                    <Setter
                        Property="Background"
                        Value="White" />
                </Style.Setters>
            </Style>
            <Style
                TargetType="{x:Type TextBlock}">
                <Setter
                    Property="Foreground"
                    Value="White" />
                <Style.Triggers>
                    <EventTrigger
                        RoutedEvent="Binding.TargetUpdated">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:0.3"
                                    From="0"
                                    To="1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <converters:MouseButtonEventArgsToChangeTypeConverter
                x:Key="MouseButtonEventArgsToPhotoActionConverter" />
            <BooleanToVisibilityConverter
                x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </windows:ResizableWindow.Resources>
    <windows:ResizableWindow.InputBindings>
        <KeyBinding
            Key="R"
            Modifiers="Control"
            Command="{Binding RenameToDateCommand, Mode=OneTime}" />
        <KeyBinding
            Key="F"
            Command="{Binding FavoriteCommand, Mode=OneTime}" />
        <KeyBinding
            Key="Back"
            Command="{Binding MarkForDeletionCommand, Mode=OneTime}" />
        <KeyBinding
            Key="Delete"
            Command="{Binding MarkForDeletionCommand, Mode=OneTime}" />
        <KeyBinding
            Key="Right"
            Command="{Binding ChangePhotoCommand, Mode=OneTime}"
            CommandParameter="{x:Static viewModel:ChangeType.Next}" />
        <KeyBinding
            Key="Left"
            Command="{Binding ChangePhotoCommand, Mode=OneTime}"
            CommandParameter="{x:Static viewModel:ChangeType.Prev}" />
    </windows:ResizableWindow.InputBindings>
    <b:Interaction.Triggers>
        <b:EventTrigger
            EventName="MouseUp">
            <behaviors:InvokeCommandWithArgsAction
                Command="{Binding ChangePhotoCommand, Mode=OneTime}"
                CommandParameterConverter="{StaticResource MouseButtonEventArgsToPhotoActionConverter}" />
        </b:EventTrigger>
        <b:EventTrigger
            EventName="Closing">
            <b:InvokeCommandAction
                Command="{Binding WindowClosingCommand, Mode=OneTime}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <windows:ResizableWindow.ContextMenu>
        <ContextMenu>
            <MenuItem
                Header="Favorite (F)"
                Command="{Binding FavoriteCommand, Mode=OneTime}" />
            <MenuItem
                Header="Mark as deleted (Delete|Backspace)"
                Command="{Binding MarkForDeletionCommand, Mode=OneTime}" />
            <MenuItem
                IsEnabled="{Binding Photo.DateImageTakenIsSpecified, Mode=OneWay}"
                Header="Rename to date (Ctrl+R)"
                Command="{Binding RenameToDateCommand, Mode=OneTime}" />
            <MenuItem
                Header="Open in Explorer"
                Command="{Binding OpenPhotoInExplorerCommand, Mode=OneTime}" />
            <MenuItem
                IsEnabled="{Binding Photo.OrientationIsSpecified, Mode=OneWay}"
                Header="Rotate clockwise"
                Command="{Binding RotateCommand, Mode=OneTime}"
                CommandParameter="{x:Static data:RotationType.Clockwise}" />
            <MenuItem
                IsEnabled="{Binding Photo.OrientationIsSpecified, Mode=OneWay}"
                Header="Rotate counter clockwise"
                Command="{Binding RotateCommand, Mode=OneTime}"
                CommandParameter="{x:Static data:RotationType.CounterClockwise}" />
        </ContextMenu>
    </windows:ResizableWindow.ContextMenu>
    <Grid
        Margin="0">
        <!-- Nav -->
        <Canvas
            Panel.ZIndex="1"
            HorizontalAlignment="Stretch"
            Margin="5"
            VerticalAlignment="Center">
            <!--Change photo buttons-->
            <Button
                ToolTip="Previous photo"
                Canvas.Top="-19"
                Canvas.Left="0"
                Visibility="{Binding PrevPhotoAvailable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding ChangePhotoCommand, Mode=OneTime}"
                CommandParameter="{x:Static viewModel:ChangeType.Prev}">
                <materialDesign:PackIcon
                    Kind="ChevronLeft" />
            </Button>
            <Button
                ToolTip="Next photo"
                Canvas.Top="-19"
                Canvas.Right="0"
                Visibility="{Binding NextPhotoAvailable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding ChangePhotoCommand, Mode=OneTime}"
                CommandParameter="{x:Static viewModel:ChangeType.Next}">
                <materialDesign:PackIcon
                    Kind="ChevronRight" />
            </Button>
        </Canvas>

        <Canvas
            Panel.ZIndex="1"
            HorizontalAlignment="Stretch"
            Margin="5"
            VerticalAlignment="Top">
            <StackPanel
                Canvas.Top="0"
                Canvas.Left="0">
                <TextBlock
                    Text="{Binding Path=Photo.Name, Mode=OneWay}" />
                <TextBlock
                    Text="{Binding Path=Photo.Metadata.CameraModel, Mode=OneWay}" />
                <TextBlock
                    Text="{Binding Path=Photo.PositionInCollection, Mode=OneWay}" />
                <StackPanel.Style>
                    <Style
                        TargetType="{x:Type StackPanel}">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding WindowState, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Value="Normal">
                                <Setter
                                    Property="Visibility"
                                    Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <Button
                Canvas.Top="0"
                Canvas.Right="0"
                ToolTip="Toggle full height"
                Command="{Binding ToggleFullHeightCommand, Mode=OneTime}"
                CommandParameter="{Binding Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type viewContracts:IPhotoWindow}}}">
                <materialDesign:PackIcon>
                    <materialDesign:PackIcon.Style>
                        <Style
                            TargetType="materialDesign:PackIcon"
                            BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsFullHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type viewContracts:IPhotoWindow}}}"
                                    Value="False">
                                    <Setter
                                        Property="Kind"
                                        Value="Fullscreen" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Style.Setters>
                                <Setter
                                    Property="Kind"
                                    Value="FullscreenExit" />
                            </Style.Setters>
                        </Style>
                    </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>
            </Button>
        </Canvas>

        <Canvas>
            <StackPanel
                Canvas.Bottom="0"
                Canvas.Left="0"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style
                        TargetType="materialDesign:PackIcon"
                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                        <Setter
                            Property="Width"
                            Value="20" />
                        <Setter
                            Property="Height"
                            Value="20" />
                    </Style>
                </StackPanel.Resources>
                <Button
                    Visibility="{Binding Photo.OrientationIsSpecified, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                    ToolTip="Rotate clockwise"
                    Command="{Binding RotateCommand, Mode=OneTime}"
                    CommandParameter="{x:Static data:RotationType.Clockwise}">
                    <materialDesign:PackIcon
                        Kind="RotateRight" />
                </Button>
                <Button
                    Visibility="{Binding Photo.OrientationIsSpecified, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                    ToolTip="Rotate counter clockwise"
                    Command="{Binding RotateCommand, Mode=OneTime}"
                    CommandParameter="{x:Static data:RotationType.CounterClockwise}">
                    <materialDesign:PackIcon
                        Kind="RotateLeft" />
                </Button>
            </StackPanel>
        </Canvas>

        <!-- Photo -->
        <Border
            Panel.ZIndex="0"
            Padding="4"
            Margin="4"
            Style="{StaticResource ColorByDeleted}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            BorderBrush="#22000000"
            BorderThickness="1">
            <zoomBorder:ZoomBorder
                x:Name="ZoomBorder"
                ClipToBounds="True"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Image
                    Tag="{Binding Photo, Mode=OneWay, NotifyOnTargetUpdated=True}"
                    Source="{Binding BitmapSource, Mode=OneWay}"
                    TargetUpdated="Image_TargetUpdated">
                    <Image.Triggers>
                        <EventTrigger
                            RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard
                                    Storyboard.TargetProperty="Opacity">
                                    <DoubleAnimation
                                        From="0.5"
                                        To="1"
                                        Duration="0:0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </zoomBorder:ZoomBorder>
        </Border>
    </Grid>
</windows:ResizableWindow>
